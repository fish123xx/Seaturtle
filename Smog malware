The Smog malware is a sophisticated and harmful software designed to infiltrate computer systems, causing significant damage and potentially gaining unauthorized access. General IoCs for malware like Smog typically include unusual network traffic, unexpected system behaviour, unknown files or processes, and security solution alerts. Smog malware is a custom malware developed by Sea Turtle.

Below are some of the features of Smog Malware – 
•	Shutdowns
•	Crashespc
•	Disablenet
•	System Meltdown
•	Blue Screen Fake
•	Kill USB
•	Pc Optimize

How Smog Malware Works:

1.	Infiltration: Smog malware likely enters a system through common vectors such as phishing emails, malicious attachments, or exploiting system vulnerabilities.
2.	Execution: Once inside the system, it may execute its payload, which could range from data theft to system damage.
3.	Avoidance of Detection: Sophisticated malware like Smog often employs techniques to evade detection, such as obfuscating its code or mimicking legitimate processes.
4.	Payload Delivery: The payload could vary from data exfiltration, encryption of files for ransom, system damage, or creating a backdoor for future access.
5.	Spread: In some cases, such malware can also propagate across networks, infecting other systems.

Linked here you will be able to find a github page with the poc’s of how the different attack methods take place -  There are some recent smog IOC’s listed in the IOC section at the end of the document 
https://github.com/palahsu/Malware-Smog



Findings and analysis – 
Due to the fact there is little to no information about how the malware works – I was able to find one of the IOC’s – a MD5 hash- I then put it into a sandbox to be able to understand in depth how this malware works, and the behaviours they display – from what I can see Sea Turtle uses decoy Microsoft official files to masquerade as Microsoft files – when I specifically looked at the MD5 hash 32c3cbd18d8ac5c316781df42f49069d – this is what I was able to find – 

32c3cbd18d8ac5c316781df42f49069d analysis – 
•	The file is owned by “Microsoft” but there is no signature – and it also has flagged up as malicious on virus total 
Tactic	Techniques
Discovery	- Process Discovery
- Query Registry
- System Information Discovery
Execution	- Native API
Persistence	- Boot or Logon Autostart Execution
- Registry Run Keys / Startup Folder
Privilege Escalation	- Process Injection
- Extra Window Memory Injection
Defense Evasion	- Modify Registry
- Obfuscated Files or Information
- Software Packing
Collection	- Archive Collected Data
Command and Control	- Application Layer Protocol
- Web Protocols
- Encrypted Channel
- Ingress Tool Transfer
•	The most interesting find from this sandbox was that this file had 2 dns requests to the following sites – www[.]xss.codes and xss.codes and all of the HTTPS requests are get requests to xss codes- so this could potentially be legitimate Microsoft files which have been cracked and made malicious as it is still owned by Microsoft.
 


Summary of my findings for Smog Malware 

1.	Registry Interactions:
•	Registry Keys Set: The malware sets various registry keys such as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\Windows System, indicating its efforts to maintain persistence on the infected system.
•	Registry Keys Opened: It opens keys like HKCU\Software\Microsoft\Windows\CurrentVersion\Run, which could be used for configuration and control of its operation.
•	Registry Keys Deleted: Deletion of keys like HKLM\SYSTEM\ControlSet001\Services\WmiApRpl\Performance\First Counter can be an attempt to evade detection or disrupt system monitoring tools.
2.	Network Communication:
•	The malware performs HTTP requests to URLs like http://www.xss.codes/SkypeApp.exe, indicating its capability to download additional payloads or communicate with a command-and-control server.
3.	Process and Service Actions:
•	Processes Created: It creates processes such as %SAMPLEPATH%\Skype.exe, which could be a part of its execution strategy or a means to execute malicious payloads.
4.	Evasion Techniques:
•	Highlighted Actions: Calls to GetTickCount and accessing system files like C:\Windows\system32\cmd.exe suggest tactics for evasion and stealth operation.

